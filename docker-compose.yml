version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: neureal-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: neureal
      MONGO_INITDB_ROOT_PASSWORD: neureal_password
      MONGO_INITDB_DATABASE: neureal
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - neureal-network

  # Redis Cache
  redis:
    image: redis:7.2-alpine
    container_name: neureal-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass neureal_redis_password
    volumes:
      - redis_data:/data
    networks:
      - neureal-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: neureal-backend
    restart: unless-stopped
    ports:
      - "3001:3001"
      - "3002:3002"
    environment:
      NODE_ENV: production
      PORT: 3001
      WS_PORT: 3002
      MONGODB_URI: mongodb://neureal:neureal_password@mongodb:27017/neureal
      REDIS_URL: redis://:neureal_redis_password@redis:6379
      JWT_SECRET: ${JWT_SECRET}
      RPC_URL: ${RPC_URL}
      PRIVATE_KEY: ${PRIVATE_KEY}
      NEURAL_TOKEN_ADDRESS: ${NEURAL_TOKEN_ADDRESS}
      PREDICTION_MARKET_ADDRESS: ${PREDICTION_MARKET_ADDRESS}
      CHAIN_ID: ${CHAIN_ID:-8453}
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./backend/logs:/app/logs
    networks:
      - neureal-network

  # Frontend (Nginx serving built React app)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        REACT_APP_API_URL: ${REACT_APP_API_URL:-http://localhost:3001/api/v1}
        REACT_APP_WS_URL: ${REACT_APP_WS_URL:-ws://localhost:3002}
        REACT_APP_CHAIN_ID: ${REACT_APP_CHAIN_ID:-8453}
        REACT_APP_NEURAL_TOKEN_ADDRESS: ${REACT_APP_NEURAL_TOKEN_ADDRESS}
        REACT_APP_PREDICTION_MARKET_ADDRESS: ${REACT_APP_PREDICTION_MARKET_ADDRESS}
    container_name: neureal-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - neureal-network

  # Nginx Reverse Proxy (Optional - for production)
  nginx:
    image: nginx:alpine
    container_name: neureal-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - neureal-network
    profiles:
      - production

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  neureal-network:
    driver: bridge
